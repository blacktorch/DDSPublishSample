# -*- Makefile -*-
#----------------------------------------------------------------------------
#       GNU Makefile
#
# @file GNUmakefile.MissionData
#
# $Id$
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
MAKEFILE         = GNUmakefile.MissionData
DEPENDENCY_FILE  = .depend.MissionData

IDL_DEPENDENCY_FILE1 = .depend.MissionData_Idl1
IDL_DEPENDENCY_FILE2 = .depend.MissionData_Idl2

IDL_DEPENDENCY_FILES += \
	.depend.MissionData_Idl1 \
	.depend.MissionData_Idl2

LIB_PREFIX      ?= lib

## LIB_CHECKED may be set to empty later on in this file
LIB_UNCHECKED    = $(LIB_PREFIX)MissionData.$(LIBEXT)
LIB_CHECKED      = $(LIB_UNCHECKED)
LIB_NAME         = $(LIB_PREFIX)MissionData

## SHLIB may be set to empty later on in this file
SHLIB_UNCHECKED  = $(LIB_PREFIX)MissionData.$(SOEXT)
SHLIB            = $(SHLIB_UNCHECKED)

TAO_ROOT  ?= $(ACE_ROOT)/TAO

FILES = \
  MissionDataTypeSupportJC.cpp \
  MissionDataJC.cpp \
  MissionDataTypeSupportS.cpp \
  MissionDataTypeSupportC.cpp \
  MissionDataS.cpp \
  MissionDataC.cpp \
  MissionDataTypeSupportImpl.cpp

IDL_DEPS_FLAGS1 = -DGEN_IDL_MAKE_DEPS
IDL_DEPS1 = MissionDataTypeSupport.idl

IDL_DEPS_FLAGS2 = -DGEN_IDL_MAKE_DEPS
IDL_DEPS2 = MissionData.idl



LIBPATHS := . "$(ACE_ROOT)/lib" "$(DDS_ROOT)/lib"

#----------------------------------------------------------------------------
#       Include macros and targets
#----------------------------------------------------------------------------
ACE_SHLIBS = -lOpenDDS_DCPS_Java -ltao_java -lidl2jni_runtime -lOpenDDS_Dcps -lTAO_BiDirGIOP -lTAO_PI -lTAO_CodecFactory -lTAO_PortableServer -lTAO_AnyTypeCode -lTAO -lACE
TAO_IDL = $(ACE_ROOT)/bin/tao_idl
TAO_IDL_DEP = $(ACE_ROOT)/bin/tao_idl$(EXEEXT)
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT)$(if $(ARCH), -g $(call ADD_QUOTE,$(call ADD_ARCH,$(ACE_ROOT)/bin/ace_gperf)))

PRJ_TYPE = library

COLLAPSE_SLASHES = $(if $(findstring //,$(1)),$(call COLLAPSE_SLASHES,$(subst //,/,$(1))),$(1))
INSLIB ?= $(call COLLAPSE_SLASHES,.)
ifeq ($(INSLIB),.)
  ifeq ($(CURDIR),)
    ifeq ($(PWD),)
      PWD=$(shell pwd)
    endif
  else
    PWD=$(CURDIR)
  endif
  INSLIB = $(PWD)
endif
OUTPUT_DIRECTORY = $(INSLIB)

include $(ACE_ROOT)/include/makeinclude/wrapper_macros.GNU

include $(DDS_ROOT)/rules.dds.GNU

include $(TAO_ROOT)/rules.tao.GNU

GNUACE_PROJECT_VERSION ?= $(ACE_VERSION)

# To build multiple targets in the same directory on AIX, it works
# best to have a template directory per project.
# The compiler/linker isn't too smart about instantiating templates...
ifdef TEMPINCDIR
TEMPINCDIR := $(TEMPINCDIR)/MissionData
all: $(TEMPINCDIR)
endif

ifneq ($(OUTPUT_DIRECTORY),)
.PHONY: create_output_directory.local
all: create_output_directory.local
create_output_directory.local:
	-@$(MKDIR) "$(OUTPUT_DIRECTORY)" $(ACE_NUL_STDERR)
endif

# turn off libcheck if doing a dry run
ifeq ($(findstring n, $(MAKEFLAGS)),n)
  LIBCHECK = 1
else
  # turn off libcheck if keep going was passed too
  ifeq ($(findstring k, $(MAKEFLAGS)),k)
    LIBCHECK = 1
  else
    LIBCHECK ?= $(filter-out $(foreach lib,OpenDDS_DCPS_Java tao_java idl2jni_runtime OpenDDS_Dcps TAO_BiDirGIOP TAO_PI TAO_CodecFactory TAO_PortableServer TAO_AnyTypeCode TAO ACE,$(findstring $(lib),$(foreach libpath,. $(if $(ARCH),./$(ARCH)) $(ACE_ROOT)/lib $(if $(ARCH),$(ACE_ROOT)/lib/$(ARCH)) $(DDS_ROOT)/lib $(if $(ARCH),$(DDS_ROOT)/lib/$(ARCH)) /usr/lib /usr/lib64 $(INSLIB),$(wildcard $(libpath)/$(LIB_PREFIX)$(lib).* $(libpath)/$(lib).lib)))),OpenDDS_DCPS_Java tao_java idl2jni_runtime OpenDDS_Dcps TAO_BiDirGIOP TAO_PI TAO_CodecFactory TAO_PortableServer TAO_AnyTypeCode TAO ACE)
    ifeq ($(LIBCHECK),)
      LIBCHECK = 1
    endif
  endif
endif
ifeq ($(java),1)
ifneq ($(LIBCHECK), 1)
  LIB_CHECKED   =
  SHLIB =
  all: lib_warning
endif
else
  LIB_CHECKED   =
  SHLIB =
  all: require_warning
endif

ifeq ($(java),1)
else
  LIB_CHECKED   =
  SHLIB =
  all: require_warning
endif
LSRC   = $(FILES)

include $(ACE_ROOT)/include/makeinclude/macros.GNU
include $(ACE_ROOT)/include/makeinclude/rules.common.GNU
include $(ACE_ROOT)/include/makeinclude/rules.nonested.GNU
include $(ACE_ROOT)/include/makeinclude/rules.lib.GNU
include $(ACE_ROOT)/include/makeinclude/rules.local.GNU
ifeq ($(VXWORKSLINK),1)
include $(TGT_DIR)/h/make/rules.$(PRJ_TYPE)
endif

ifeq ($(VXWORKSLINK),1)
LDLIBPATH     = -L. -L$(ACE_ROOT)/lib -L$(DDS_ROOT)/lib
else
LDFLAGS      += -L. $(if $(ARCH),-L./$(ARCH)) -L$(ACE_ROOT)/lib $(if $(ARCH),-L$(ACE_ROOT)/lib/$(ARCH)) -L$(DDS_ROOT)/lib $(if $(ARCH),-L$(DDS_ROOT)/lib/$(ARCH))
endif
CPPFLAGS     += -I$(ACE_ROOT) -I$(TAO_ROOT) -I$(DDS_ROOT) -I$(DDS_ROOT)/java/idl2jni/runtime -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/$(JAVA_PLATFORM) -I$(DDS_ROOT)/java -I$(DDS_ROOT)/dds
CPPFLAGS     += -DNOMINMAX
ifeq ($(shared_libs),1)
  ifneq ($(SHLIB),)
    CPPFLAGS += -DMISSION_DATA_BUILD_DLL
  endif
endif
ifeq ($(static_libs),1)
  CPPFLAGS += -DACE_AS_STATIC_LIBS -DTAO_AS_STATIC_LIBS
endif

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------
lib_warning:
	@echo MissionData will not be built due to the following missing library: $(LIBCHECK) >&2

ifneq ($(java),1)
requires_disabled_macros += java
endif
require_warning:
	@echo MissionData will not be built due to the following disabled make macros: $(requires_disabled_macros)>&2

## Some OS's have /bin/test others only have /usr/bin/test
ifeq ($(wildcard /bin/test), /bin/test)
  TEST_EXE = /bin/test
else
ifeq ($(wildcard /usr/bin/test), /usr/bin/test)
  TEST_EXE = /usr/bin/test
endif
endif

SPACE = $(should_be_unset) $(should_be_unset)
export DYLD_LIBRARY_PATH := $(DYLD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export LD_LIBRARY_PATH   := $(LD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export SHLIB_PATH        := $(SHLIB_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export LIBPATH           := $(LIBPATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export PATH              := $(PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))

GENERATED_DIRTY += MissionDataTypeSupportS.cpp MissionDataTypeSupportC.cpp MissionDataTypeSupportC.inl MissionDataTypeSupportC.h MissionDataTypeSupportS.h
OBJS_DEPEND_ON_GENERATED = 1
## More than one file is generated by the command and therefore
## it can not be run in parallel.  Unfortunately, there is no way to
## say that only this rule can't be run in parallel.  However, we can
## determine if the generated files have already been generated.  If that's
## the case, then we don't need this special rule.
ifeq ($(wildcard $(GENERATED_DIRTY)), $(GENERATED_DIRTY))
  ## If we can find /bin/test, then we will continue
  ifneq ($(TEST_EXE),)
    ## If all of the generated files are there, then we need to check
    ## and make sure that the generated files are up-to-date.  If they are not
    ## then we need the special rule.
    ifeq ($(shell $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionDataTypeSupportS.cpp" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionDataTypeSupportC.cpp" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionDataTypeSupportC.inl" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionDataTypeSupportC.h" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionDataTypeSupportS.h" 2> /dev/null || echo 0),)
      .NOTPARALLEL:

    else
      ## By this point, all of the generated files are here and up-to-date
      ## with respect to the source file.  Now we need to make sure that
      ## they are up-to-date with respect to the generation tool.  If the tool
      ## is newer than the generated files, then we need the special rule.
      ifeq ($(shell $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataTypeSupportS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataTypeSupportC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataTypeSupportC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataTypeSupportC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataTypeSupportS.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataTypeSupportS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataTypeSupportC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataTypeSupportC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataTypeSupportC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataTypeSupportS.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataTypeSupportS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataTypeSupportC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataTypeSupportC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataTypeSupportC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataTypeSupportS.h" 2> /dev/null || echo 0),)
        .NOTPARALLEL:
      endif
    endif
  else
    .NOTPARALLEL:
  endif
else
.NOTPARALLEL:
endif
MissionDataTypeSupportS.cpp MissionDataTypeSupportC.cpp MissionDataTypeSupportC.inl MissionDataTypeSupportC.h MissionDataTypeSupportS.h: MissionDataTypeSupport.idl $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(TAO_IDL_DEP)))
	$(if $(findstring ",$(TAO_IDL)),$(TAO_IDL),$(call ADD_QUOTE,$(call ADD_ARCH,$(TAO_IDL)))) $(TAO_IDLFLAGS) -Sa -St -I$(DDS_ROOT) -Wb,stub_export_include=MissionData_Export.h -Wb,stub_export_macro=MissionData_Export MissionDataTypeSupport.idl


ifneq ($(static_libs_only),1)
ifneq ($(CROSS-COMPILE),1)
MissionDataTypeSupportS.cpp MissionDataTypeSupportC.cpp MissionDataTypeSupportC.inl MissionDataTypeSupportC.h MissionDataTypeSupportS.h: $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))) $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT)))
endif
endif

GENERATED_DIRTY += MissionDataS.cpp MissionDataC.cpp MissionDataC.inl MissionDataC.h MissionDataS.h
OBJS_DEPEND_ON_GENERATED = 1
## More than one file is generated by the command and therefore
## it can not be run in parallel.  Unfortunately, there is no way to
## say that only this rule can't be run in parallel.  However, we can
## determine if the generated files have already been generated.  If that's
## the case, then we don't need this special rule.
ifeq ($(wildcard $(GENERATED_DIRTY)), $(GENERATED_DIRTY))
  ## If we can find /bin/test, then we will continue
  ifneq ($(TEST_EXE),)
    ## If all of the generated files are there, then we need to check
    ## and make sure that the generated files are up-to-date.  If they are not
    ## then we need the special rule.
    ifeq ($(shell $(TEST_EXE) "MissionData.idl" -nt "MissionDataS.cpp" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionDataC.cpp" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionDataC.inl" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionDataC.h" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionDataS.h" 2> /dev/null || echo 0),)
      .NOTPARALLEL:

    else
      ## By this point, all of the generated files are here and up-to-date
      ## with respect to the source file.  Now we need to make sure that
      ## they are up-to-date with respect to the generation tool.  If the tool
      ## is newer than the generated files, then we need the special rule.
      ifeq ($(shell $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(TAO_IDL_DEP))" -nt "MissionDataS.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))" -nt "MissionDataS.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataS.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataC.inl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT))" -nt "MissionDataS.h" 2> /dev/null || echo 0),)
        .NOTPARALLEL:
      endif
    endif
  else
    .NOTPARALLEL:
  endif
else
.NOTPARALLEL:
endif
MissionDataS.cpp MissionDataC.cpp MissionDataC.inl MissionDataC.h MissionDataS.h: MissionData.idl $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(TAO_IDL_DEP)))
	$(if $(findstring ",$(TAO_IDL)),$(TAO_IDL),$(call ADD_QUOTE,$(call ADD_ARCH,$(TAO_IDL)))) $(TAO_IDLFLAGS) -Sa -St -I$(DDS_ROOT) -Wb,stub_export_include=MissionData_Export.h -Wb,stub_export_macro=MissionData_Export MissionData.idl


ifneq ($(static_libs_only),1)
ifneq ($(CROSS-COMPILE),1)
MissionDataS.cpp MissionDataC.cpp MissionDataC.inl MissionDataC.h MissionDataS.h: $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_BE.$(SOEXT))) $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(ACE_ROOT)/lib/$(LIB_PREFIX)TAO_IDL_FE.$(SOEXT)))
endif
endif

export DYLD_LIBRARY_PATH := $(DYLD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export LD_LIBRARY_PATH   := $(LD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export SHLIB_PATH        := $(SHLIB_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export LIBPATH           := $(LIBPATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export PATH              := $(PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))

GENERATED_DIRTY += MissionDataTypeSupportImpl.cpp MissionDataTypeSupport.idl MissionDataTypeSupportImpl.h MissionData/MissionPlanTypeSupportImpl.java MissionData/NormalizedPointsTypeSupportImpl.java MissionData/TelemetryTypeSupportImpl.java
OBJS_DEPEND_ON_GENERATED = 1
## More than one file is generated by the command and therefore
## it can not be run in parallel.  Unfortunately, there is no way to
## say that only this rule can't be run in parallel.  However, we can
## determine if the generated files have already been generated.  If that's
## the case, then we don't need this special rule.
ifeq ($(wildcard $(GENERATED_DIRTY)), $(GENERATED_DIRTY))
  ## If we can find /bin/test, then we will continue
  ifneq ($(TEST_EXE),)
    ## If all of the generated files are there, then we need to check
    ## and make sure that the generated files are up-to-date.  If they are not
    ## then we need the special rule.
    ifeq ($(shell $(TEST_EXE) "MissionData.idl" -nt "MissionDataTypeSupportImpl.cpp" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionDataTypeSupport.idl" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionDataTypeSupportImpl.h" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/MissionPlanTypeSupportImpl.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/NormalizedPointsTypeSupportImpl.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/TelemetryTypeSupportImpl.java" 2> /dev/null || echo 0),)
      .NOTPARALLEL:

    else
      ## By this point, all of the generated files are here and up-to-date
      ## with respect to the source file.  Now we need to make sure that
      ## they are up-to-date with respect to the generation tool.  If the tool
      ## is newer than the generated files, then we need the special rule.
      ifeq ($(shell $(TEST_EXE) "$(call ADD_ARCH,$(OPENDDS_IDL_DEP))" -nt "MissionDataTypeSupportImpl.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(OPENDDS_IDL_DEP))" -nt "MissionDataTypeSupport.idl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(OPENDDS_IDL_DEP))" -nt "MissionDataTypeSupportImpl.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(OPENDDS_IDL_DEP))" -nt "MissionData/MissionPlanTypeSupportImpl.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(OPENDDS_IDL_DEP))" -nt "MissionData/NormalizedPointsTypeSupportImpl.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(OPENDDS_IDL_DEP))" -nt "MissionData/TelemetryTypeSupportImpl.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(DDS_ROOT)/dds/idl/IDLTemplate.txt)" -nt "MissionDataTypeSupportImpl.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(DDS_ROOT)/dds/idl/IDLTemplate.txt)" -nt "MissionDataTypeSupport.idl" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(DDS_ROOT)/dds/idl/IDLTemplate.txt)" -nt "MissionDataTypeSupportImpl.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(DDS_ROOT)/dds/idl/IDLTemplate.txt)" -nt "MissionData/MissionPlanTypeSupportImpl.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(DDS_ROOT)/dds/idl/IDLTemplate.txt)" -nt "MissionData/NormalizedPointsTypeSupportImpl.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(DDS_ROOT)/dds/idl/IDLTemplate.txt)" -nt "MissionData/TelemetryTypeSupportImpl.java" 2> /dev/null || echo 0),)
        .NOTPARALLEL:
      endif
    endif
  else
    .NOTPARALLEL:
  endif
else
.NOTPARALLEL:
endif
MissionDataTypeSupportImpl.cpp MissionDataTypeSupport.idl MissionDataTypeSupportImpl.h MissionData/MissionPlanTypeSupportImpl.java MissionData/NormalizedPointsTypeSupportImpl.java MissionData/TelemetryTypeSupportImpl.java: MissionData.idl $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(OPENDDS_IDL_DEP))) $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(DDS_ROOT)/dds/idl/IDLTemplate.txt))
	$(if $(findstring ",$(OPENDDS_IDL)),$(OPENDDS_IDL),$(call ADD_QUOTE,$(call ADD_ARCH,$(OPENDDS_IDL)))) -Sa -St -Wb,java -Wb,export_macro=MissionData_Export MissionData.idl


GENERATED_DIRTY += classes/MissionData/MissionPlanSeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanSeqHolder.class: MissionData/MissionPlanSeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanSeqHolder.java


GENERATED_DIRTY += classes/MissionData/MissionPlanSeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanSeqHelper.class: MissionData/MissionPlanSeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanSeqHelper.java


GENERATED_DIRTY += classes/MissionData/MissionPlanTypeSupport.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanTypeSupport.class: MissionData/MissionPlanTypeSupport.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanTypeSupport.java


GENERATED_DIRTY += classes/MissionData/MissionPlanTypeSupportHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanTypeSupportHolder.class: MissionData/MissionPlanTypeSupportHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanTypeSupportHolder.java


GENERATED_DIRTY += classes/MissionData/MissionPlanTypeSupportHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanTypeSupportHelper.class: MissionData/MissionPlanTypeSupportHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanTypeSupportHelper.java


GENERATED_DIRTY += classes/MissionData/MissionPlanTypeSupportOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanTypeSupportOperations.class: MissionData/MissionPlanTypeSupportOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanTypeSupportOperations.java


GENERATED_DIRTY += classes/MissionData/_MissionPlanTypeSupportLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_MissionPlanTypeSupportLocalBase.class: MissionData/_MissionPlanTypeSupportLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_MissionPlanTypeSupportLocalBase.java


GENERATED_DIRTY += classes/MissionData/_MissionPlanTypeSupportTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_MissionPlanTypeSupportTAOPeer.class: MissionData/_MissionPlanTypeSupportTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_MissionPlanTypeSupportTAOPeer.java


GENERATED_DIRTY += classes/MissionData/MissionPlanDataWriter.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanDataWriter.class: MissionData/MissionPlanDataWriter.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanDataWriter.java


GENERATED_DIRTY += classes/MissionData/MissionPlanDataWriterHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanDataWriterHolder.class: MissionData/MissionPlanDataWriterHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanDataWriterHolder.java


GENERATED_DIRTY += classes/MissionData/MissionPlanDataWriterHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanDataWriterHelper.class: MissionData/MissionPlanDataWriterHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanDataWriterHelper.java


GENERATED_DIRTY += classes/MissionData/MissionPlanDataWriterOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanDataWriterOperations.class: MissionData/MissionPlanDataWriterOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanDataWriterOperations.java


GENERATED_DIRTY += classes/MissionData/_MissionPlanDataWriterLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_MissionPlanDataWriterLocalBase.class: MissionData/_MissionPlanDataWriterLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_MissionPlanDataWriterLocalBase.java


GENERATED_DIRTY += classes/MissionData/_MissionPlanDataWriterTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_MissionPlanDataWriterTAOPeer.class: MissionData/_MissionPlanDataWriterTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_MissionPlanDataWriterTAOPeer.java


GENERATED_DIRTY += classes/MissionData/MissionPlanDataReader.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanDataReader.class: MissionData/MissionPlanDataReader.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanDataReader.java


GENERATED_DIRTY += classes/MissionData/MissionPlanDataReaderHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanDataReaderHolder.class: MissionData/MissionPlanDataReaderHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanDataReaderHolder.java


GENERATED_DIRTY += classes/MissionData/MissionPlanDataReaderHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanDataReaderHelper.class: MissionData/MissionPlanDataReaderHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanDataReaderHelper.java


GENERATED_DIRTY += classes/MissionData/MissionPlanDataReaderOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanDataReaderOperations.class: MissionData/MissionPlanDataReaderOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanDataReaderOperations.java


GENERATED_DIRTY += classes/MissionData/_MissionPlanDataReaderLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_MissionPlanDataReaderLocalBase.class: MissionData/_MissionPlanDataReaderLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_MissionPlanDataReaderLocalBase.java


GENERATED_DIRTY += classes/MissionData/_MissionPlanDataReaderTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_MissionPlanDataReaderTAOPeer.class: MissionData/_MissionPlanDataReaderTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_MissionPlanDataReaderTAOPeer.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsSeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsSeqHolder.class: MissionData/NormalizedPointsSeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsSeqHolder.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsSeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsSeqHelper.class: MissionData/NormalizedPointsSeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsSeqHelper.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsTypeSupport.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsTypeSupport.class: MissionData/NormalizedPointsTypeSupport.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsTypeSupport.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsTypeSupportHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsTypeSupportHolder.class: MissionData/NormalizedPointsTypeSupportHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsTypeSupportHolder.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsTypeSupportHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsTypeSupportHelper.class: MissionData/NormalizedPointsTypeSupportHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsTypeSupportHelper.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsTypeSupportOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsTypeSupportOperations.class: MissionData/NormalizedPointsTypeSupportOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsTypeSupportOperations.java


GENERATED_DIRTY += classes/MissionData/_NormalizedPointsTypeSupportLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_NormalizedPointsTypeSupportLocalBase.class: MissionData/_NormalizedPointsTypeSupportLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_NormalizedPointsTypeSupportLocalBase.java


GENERATED_DIRTY += classes/MissionData/_NormalizedPointsTypeSupportTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_NormalizedPointsTypeSupportTAOPeer.class: MissionData/_NormalizedPointsTypeSupportTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_NormalizedPointsTypeSupportTAOPeer.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsDataWriter.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsDataWriter.class: MissionData/NormalizedPointsDataWriter.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsDataWriter.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsDataWriterHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsDataWriterHolder.class: MissionData/NormalizedPointsDataWriterHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsDataWriterHolder.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsDataWriterHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsDataWriterHelper.class: MissionData/NormalizedPointsDataWriterHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsDataWriterHelper.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsDataWriterOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsDataWriterOperations.class: MissionData/NormalizedPointsDataWriterOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsDataWriterOperations.java


GENERATED_DIRTY += classes/MissionData/_NormalizedPointsDataWriterLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_NormalizedPointsDataWriterLocalBase.class: MissionData/_NormalizedPointsDataWriterLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_NormalizedPointsDataWriterLocalBase.java


GENERATED_DIRTY += classes/MissionData/_NormalizedPointsDataWriterTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_NormalizedPointsDataWriterTAOPeer.class: MissionData/_NormalizedPointsDataWriterTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_NormalizedPointsDataWriterTAOPeer.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsDataReader.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsDataReader.class: MissionData/NormalizedPointsDataReader.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsDataReader.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsDataReaderHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsDataReaderHolder.class: MissionData/NormalizedPointsDataReaderHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsDataReaderHolder.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsDataReaderHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsDataReaderHelper.class: MissionData/NormalizedPointsDataReaderHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsDataReaderHelper.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsDataReaderOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsDataReaderOperations.class: MissionData/NormalizedPointsDataReaderOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsDataReaderOperations.java


GENERATED_DIRTY += classes/MissionData/_NormalizedPointsDataReaderLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_NormalizedPointsDataReaderLocalBase.class: MissionData/_NormalizedPointsDataReaderLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_NormalizedPointsDataReaderLocalBase.java


GENERATED_DIRTY += classes/MissionData/_NormalizedPointsDataReaderTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_NormalizedPointsDataReaderTAOPeer.class: MissionData/_NormalizedPointsDataReaderTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_NormalizedPointsDataReaderTAOPeer.java


GENERATED_DIRTY += classes/MissionData/TelemetrySeqHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetrySeqHolder.class: MissionData/TelemetrySeqHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetrySeqHolder.java


GENERATED_DIRTY += classes/MissionData/TelemetrySeqHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetrySeqHelper.class: MissionData/TelemetrySeqHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetrySeqHelper.java


GENERATED_DIRTY += classes/MissionData/TelemetryTypeSupport.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryTypeSupport.class: MissionData/TelemetryTypeSupport.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryTypeSupport.java


GENERATED_DIRTY += classes/MissionData/TelemetryTypeSupportHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryTypeSupportHolder.class: MissionData/TelemetryTypeSupportHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryTypeSupportHolder.java


GENERATED_DIRTY += classes/MissionData/TelemetryTypeSupportHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryTypeSupportHelper.class: MissionData/TelemetryTypeSupportHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryTypeSupportHelper.java


GENERATED_DIRTY += classes/MissionData/TelemetryTypeSupportOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryTypeSupportOperations.class: MissionData/TelemetryTypeSupportOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryTypeSupportOperations.java


GENERATED_DIRTY += classes/MissionData/_TelemetryTypeSupportLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_TelemetryTypeSupportLocalBase.class: MissionData/_TelemetryTypeSupportLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_TelemetryTypeSupportLocalBase.java


GENERATED_DIRTY += classes/MissionData/_TelemetryTypeSupportTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_TelemetryTypeSupportTAOPeer.class: MissionData/_TelemetryTypeSupportTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_TelemetryTypeSupportTAOPeer.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataWriter.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataWriter.class: MissionData/TelemetryDataWriter.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataWriter.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataWriterHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataWriterHolder.class: MissionData/TelemetryDataWriterHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataWriterHolder.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataWriterHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataWriterHelper.class: MissionData/TelemetryDataWriterHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataWriterHelper.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataWriterOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataWriterOperations.class: MissionData/TelemetryDataWriterOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataWriterOperations.java


GENERATED_DIRTY += classes/MissionData/_TelemetryDataWriterLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_TelemetryDataWriterLocalBase.class: MissionData/_TelemetryDataWriterLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_TelemetryDataWriterLocalBase.java


GENERATED_DIRTY += classes/MissionData/_TelemetryDataWriterTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_TelemetryDataWriterTAOPeer.class: MissionData/_TelemetryDataWriterTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_TelemetryDataWriterTAOPeer.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataReader.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataReader.class: MissionData/TelemetryDataReader.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataReader.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataReaderHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataReaderHolder.class: MissionData/TelemetryDataReaderHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataReaderHolder.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataReaderHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataReaderHelper.class: MissionData/TelemetryDataReaderHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataReaderHelper.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataReaderOperations.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataReaderOperations.class: MissionData/TelemetryDataReaderOperations.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataReaderOperations.java


GENERATED_DIRTY += classes/MissionData/_TelemetryDataReaderLocalBase.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_TelemetryDataReaderLocalBase.class: MissionData/_TelemetryDataReaderLocalBase.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_TelemetryDataReaderLocalBase.java


GENERATED_DIRTY += classes/MissionData/_TelemetryDataReaderTAOPeer.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/_TelemetryDataReaderTAOPeer.class: MissionData/_TelemetryDataReaderTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/_TelemetryDataReaderTAOPeer.java


GENERATED_DIRTY += classes/MissionData/PlanDataHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/PlanDataHolder.class: MissionData/PlanDataHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/PlanDataHolder.java


GENERATED_DIRTY += classes/MissionData/PlanDataHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/PlanDataHelper.class: MissionData/PlanDataHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/PlanDataHelper.java


GENERATED_DIRTY += classes/MissionData/MissionPlan.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlan.class: MissionData/MissionPlan.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlan.java


GENERATED_DIRTY += classes/MissionData/MissionPlanHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanHolder.class: MissionData/MissionPlanHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanHolder.java


GENERATED_DIRTY += classes/MissionData/MissionPlanHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanHelper.class: MissionData/MissionPlanHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanHelper.java


GENERATED_DIRTY += classes/MissionData/PointsHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/PointsHolder.class: MissionData/PointsHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/PointsHolder.java


GENERATED_DIRTY += classes/MissionData/PointsHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/PointsHelper.class: MissionData/PointsHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/PointsHelper.java


GENERATED_DIRTY += classes/MissionData/NormalizedPoints.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPoints.class: MissionData/NormalizedPoints.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPoints.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsHolder.class: MissionData/NormalizedPointsHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsHolder.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsHelper.class: MissionData/NormalizedPointsHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsHelper.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataHolder.class: MissionData/TelemetryDataHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataHolder.java


GENERATED_DIRTY += classes/MissionData/TelemetryDataHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryDataHelper.class: MissionData/TelemetryDataHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryDataHelper.java


GENERATED_DIRTY += classes/MissionData/ImageDataHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/ImageDataHolder.class: MissionData/ImageDataHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/ImageDataHolder.java


GENERATED_DIRTY += classes/MissionData/ImageDataHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/ImageDataHelper.class: MissionData/ImageDataHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/ImageDataHelper.java


GENERATED_DIRTY += classes/MissionData/Telemetry.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/Telemetry.class: MissionData/Telemetry.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/Telemetry.java


GENERATED_DIRTY += classes/MissionData/TelemetryHolder.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryHolder.class: MissionData/TelemetryHolder.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryHolder.java


GENERATED_DIRTY += classes/MissionData/TelemetryHelper.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryHelper.class: MissionData/TelemetryHelper.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryHelper.java


GENERATED_DIRTY += classes/MissionData/MissionPlanTypeSupportImpl.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/MissionPlanTypeSupportImpl.class: MissionData/MissionPlanTypeSupportImpl.java MissionData/_MissionPlanTypeSupportTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/MissionPlanTypeSupportImpl.java


GENERATED_DIRTY += classes/MissionData/NormalizedPointsTypeSupportImpl.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/NormalizedPointsTypeSupportImpl.class: MissionData/NormalizedPointsTypeSupportImpl.java MissionData/_NormalizedPointsTypeSupportTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/NormalizedPointsTypeSupportImpl.java


GENERATED_DIRTY += classes/MissionData/TelemetryTypeSupportImpl.class
OBJS_DEPEND_ON_GENERATED = 1
classes/MissionData/TelemetryTypeSupportImpl.class: MissionData/TelemetryTypeSupportImpl.java MissionData/_TelemetryTypeSupportTAOPeer.java
	$(if $(findstring ",perl),perl,$(call ADD_QUOTE,$(call ADD_ARCH,perl))) $(DDS_ROOT)/java/build_scripts/javac_wrapper.pl -sourcepath . -d classes -classpath . -implicit:none -classpath $(DDS_ROOT)/lib/i2jrt.jar -classpath $(DDS_ROOT)/lib/OpenDDS_DCPS.jar MissionData/TelemetryTypeSupportImpl.java


export DYLD_LIBRARY_PATH := $(DYLD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export LD_LIBRARY_PATH   := $(LD_LIBRARY_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export SHLIB_PATH        := $(SHLIB_PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export LIBPATH           := $(LIBPATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))
export PATH              := $(PATH):$(ACE_ROOT)/lib$(if $(ARCH),:$(ACE_ROOT)/lib/$(ARCH))

GENERATED_DIRTY += MissionDataTypeSupportJC.cpp MissionDataTypeSupportJC.h MissionData/MissionPlanSeqHolder.java MissionData/MissionPlanSeqHelper.java MissionData/MissionPlanTypeSupport.java MissionData/MissionPlanTypeSupportHolder.java MissionData/MissionPlanTypeSupportHelper.java MissionData/MissionPlanTypeSupportOperations.java MissionData/_MissionPlanTypeSupportLocalBase.java MissionData/_MissionPlanTypeSupportTAOPeer.java MissionData/MissionPlanDataWriter.java MissionData/MissionPlanDataWriterHolder.java MissionData/MissionPlanDataWriterHelper.java MissionData/MissionPlanDataWriterOperations.java MissionData/_MissionPlanDataWriterLocalBase.java MissionData/_MissionPlanDataWriterTAOPeer.java MissionData/MissionPlanDataReader.java MissionData/MissionPlanDataReaderHolder.java MissionData/MissionPlanDataReaderHelper.java MissionData/MissionPlanDataReaderOperations.java MissionData/_MissionPlanDataReaderLocalBase.java MissionData/_MissionPlanDataReaderTAOPeer.java MissionData/NormalizedPointsSeqHolder.java MissionData/NormalizedPointsSeqHelper.java MissionData/NormalizedPointsTypeSupport.java MissionData/NormalizedPointsTypeSupportHolder.java MissionData/NormalizedPointsTypeSupportHelper.java MissionData/NormalizedPointsTypeSupportOperations.java MissionData/_NormalizedPointsTypeSupportLocalBase.java MissionData/_NormalizedPointsTypeSupportTAOPeer.java MissionData/NormalizedPointsDataWriter.java MissionData/NormalizedPointsDataWriterHolder.java MissionData/NormalizedPointsDataWriterHelper.java MissionData/NormalizedPointsDataWriterOperations.java MissionData/_NormalizedPointsDataWriterLocalBase.java MissionData/_NormalizedPointsDataWriterTAOPeer.java MissionData/NormalizedPointsDataReader.java MissionData/NormalizedPointsDataReaderHolder.java MissionData/NormalizedPointsDataReaderHelper.java MissionData/NormalizedPointsDataReaderOperations.java MissionData/_NormalizedPointsDataReaderLocalBase.java MissionData/_NormalizedPointsDataReaderTAOPeer.java MissionData/TelemetrySeqHolder.java MissionData/TelemetrySeqHelper.java MissionData/TelemetryTypeSupport.java MissionData/TelemetryTypeSupportHolder.java MissionData/TelemetryTypeSupportHelper.java MissionData/TelemetryTypeSupportOperations.java MissionData/_TelemetryTypeSupportLocalBase.java MissionData/_TelemetryTypeSupportTAOPeer.java MissionData/TelemetryDataWriter.java MissionData/TelemetryDataWriterHolder.java MissionData/TelemetryDataWriterHelper.java MissionData/TelemetryDataWriterOperations.java MissionData/_TelemetryDataWriterLocalBase.java MissionData/_TelemetryDataWriterTAOPeer.java MissionData/TelemetryDataReader.java MissionData/TelemetryDataReaderHolder.java MissionData/TelemetryDataReaderHelper.java MissionData/TelemetryDataReaderOperations.java MissionData/_TelemetryDataReaderLocalBase.java MissionData/_TelemetryDataReaderTAOPeer.java
OBJS_DEPEND_ON_GENERATED = 1
## More than one file is generated by the command and therefore
## it can not be run in parallel.  Unfortunately, there is no way to
## say that only this rule can't be run in parallel.  However, we can
## determine if the generated files have already been generated.  If that's
## the case, then we don't need this special rule.
ifeq ($(wildcard $(GENERATED_DIRTY)), $(GENERATED_DIRTY))
  ## If we can find /bin/test, then we will continue
  ifneq ($(TEST_EXE),)
    ## If all of the generated files are there, then we need to check
    ## and make sure that the generated files are up-to-date.  If they are not
    ## then we need the special rule.
    ifeq ($(shell $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionDataTypeSupportJC.cpp" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionDataTypeSupportJC.h" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanSeqHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanSeqHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanTypeSupport.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_MissionPlanTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_MissionPlanTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanDataWriter.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_MissionPlanDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_MissionPlanDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanDataReader.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/MissionPlanDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_MissionPlanDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_MissionPlanDataReaderTAOPeer.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsSeqHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsSeqHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsTypeSupport.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_NormalizedPointsTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_NormalizedPointsTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsDataWriter.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_NormalizedPointsDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_NormalizedPointsDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsDataReader.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/NormalizedPointsDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_NormalizedPointsDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_NormalizedPointsDataReaderTAOPeer.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetrySeqHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetrySeqHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryTypeSupport.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_TelemetryTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_TelemetryTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryDataWriter.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_TelemetryDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_TelemetryDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryDataReader.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/TelemetryDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_TelemetryDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "MissionDataTypeSupport.idl" -nt "MissionData/_TelemetryDataReaderTAOPeer.java" 2> /dev/null || echo 0),)
      .NOTPARALLEL:

    else
      ## By this point, all of the generated files are here and up-to-date
      ## with respect to the source file.  Now we need to make sure that
      ## they are up-to-date with respect to the generation tool.  If the tool
      ## is newer than the generated files, then we need the special rule.
      ifeq ($(shell $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionDataTypeSupportJC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionDataTypeSupportJC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanTypeSupport.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_MissionPlanTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_MissionPlanTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanDataWriter.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_MissionPlanDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_MissionPlanDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanDataReader.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_MissionPlanDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_MissionPlanDataReaderTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsTypeSupport.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_NormalizedPointsTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_NormalizedPointsTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsDataWriter.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_NormalizedPointsDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_NormalizedPointsDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsDataReader.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_NormalizedPointsDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_NormalizedPointsDataReaderTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetrySeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetrySeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryTypeSupport.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_TelemetryTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_TelemetryTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataWriter.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_TelemetryDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_TelemetryDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataReader.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_TelemetryDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/_TelemetryDataReaderTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionDataTypeSupportJC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionDataTypeSupportJC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanTypeSupport.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_MissionPlanTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_MissionPlanTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanDataWriter.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_MissionPlanDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_MissionPlanDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanDataReader.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/MissionPlanDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_MissionPlanDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_MissionPlanDataReaderTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsSeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsSeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsTypeSupport.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_NormalizedPointsTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_NormalizedPointsTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsDataWriter.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_NormalizedPointsDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_NormalizedPointsDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsDataReader.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/NormalizedPointsDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_NormalizedPointsDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_NormalizedPointsDataReaderTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetrySeqHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetrySeqHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryTypeSupport.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryTypeSupportHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryTypeSupportHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryTypeSupportOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_TelemetryTypeSupportLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_TelemetryTypeSupportTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryDataWriter.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryDataWriterHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryDataWriterHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryDataWriterOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_TelemetryDataWriterLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_TelemetryDataWriterTAOPeer.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryDataReader.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryDataReaderHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryDataReaderHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/TelemetryDataReaderOperations.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_TelemetryDataReaderLocalBase.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,MissionData/PlanDataHolder.java)" -nt "MissionData/_TelemetryDataReaderTAOPeer.java" 2> /dev/null || echo 0),)
        .NOTPARALLEL:
      endif
    endif
  else
    .NOTPARALLEL:
  endif
else
.NOTPARALLEL:
endif
MissionDataTypeSupportJC.cpp MissionDataTypeSupportJC.h MissionData/MissionPlanSeqHolder.java MissionData/MissionPlanSeqHelper.java MissionData/MissionPlanTypeSupport.java MissionData/MissionPlanTypeSupportHolder.java MissionData/MissionPlanTypeSupportHelper.java MissionData/MissionPlanTypeSupportOperations.java MissionData/_MissionPlanTypeSupportLocalBase.java MissionData/_MissionPlanTypeSupportTAOPeer.java MissionData/MissionPlanDataWriter.java MissionData/MissionPlanDataWriterHolder.java MissionData/MissionPlanDataWriterHelper.java MissionData/MissionPlanDataWriterOperations.java MissionData/_MissionPlanDataWriterLocalBase.java MissionData/_MissionPlanDataWriterTAOPeer.java MissionData/MissionPlanDataReader.java MissionData/MissionPlanDataReaderHolder.java MissionData/MissionPlanDataReaderHelper.java MissionData/MissionPlanDataReaderOperations.java MissionData/_MissionPlanDataReaderLocalBase.java MissionData/_MissionPlanDataReaderTAOPeer.java MissionData/NormalizedPointsSeqHolder.java MissionData/NormalizedPointsSeqHelper.java MissionData/NormalizedPointsTypeSupport.java MissionData/NormalizedPointsTypeSupportHolder.java MissionData/NormalizedPointsTypeSupportHelper.java MissionData/NormalizedPointsTypeSupportOperations.java MissionData/_NormalizedPointsTypeSupportLocalBase.java MissionData/_NormalizedPointsTypeSupportTAOPeer.java MissionData/NormalizedPointsDataWriter.java MissionData/NormalizedPointsDataWriterHolder.java MissionData/NormalizedPointsDataWriterHelper.java MissionData/NormalizedPointsDataWriterOperations.java MissionData/_NormalizedPointsDataWriterLocalBase.java MissionData/_NormalizedPointsDataWriterTAOPeer.java MissionData/NormalizedPointsDataReader.java MissionData/NormalizedPointsDataReaderHolder.java MissionData/NormalizedPointsDataReaderHelper.java MissionData/NormalizedPointsDataReaderOperations.java MissionData/_NormalizedPointsDataReaderLocalBase.java MissionData/_NormalizedPointsDataReaderTAOPeer.java MissionData/TelemetrySeqHolder.java MissionData/TelemetrySeqHelper.java MissionData/TelemetryTypeSupport.java MissionData/TelemetryTypeSupportHolder.java MissionData/TelemetryTypeSupportHelper.java MissionData/TelemetryTypeSupportOperations.java MissionData/_TelemetryTypeSupportLocalBase.java MissionData/_TelemetryTypeSupportTAOPeer.java MissionData/TelemetryDataWriter.java MissionData/TelemetryDataWriterHolder.java MissionData/TelemetryDataWriterHelper.java MissionData/TelemetryDataWriterOperations.java MissionData/_TelemetryDataWriterLocalBase.java MissionData/_TelemetryDataWriterTAOPeer.java MissionData/TelemetryDataReader.java MissionData/TelemetryDataReaderHolder.java MissionData/TelemetryDataReaderHelper.java MissionData/TelemetryDataReaderOperations.java MissionData/_TelemetryDataReaderLocalBase.java MissionData/_TelemetryDataReaderTAOPeer.java: MissionDataTypeSupport.idl $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(IDL2JNI_DEP))) $(call ADD_ARCH,MissionData/PlanDataHolder.java)
	$(if $(findstring ",$(IDL2JNI)),$(IDL2JNI),$(call ADD_QUOTE,$(call ADD_ARCH,$(IDL2JNI)))) -Wb,native_lib_name=MissionData -SS -I$(DDS_ROOT) -I$(TAO_ROOT) -Wb,stub_export_include=MissionData_Export.h -Wb,stub_export_macro=MissionData_Export MissionDataTypeSupport.idl


GENERATED_DIRTY += MissionDataJC.cpp MissionDataJC.h MissionData/PlanDataHolder.java MissionData/PlanDataHelper.java MissionData/MissionPlan.java MissionData/MissionPlanHolder.java MissionData/MissionPlanHelper.java MissionData/PointsHolder.java MissionData/PointsHelper.java MissionData/NormalizedPoints.java MissionData/NormalizedPointsHolder.java MissionData/NormalizedPointsHelper.java MissionData/TelemetryDataHolder.java MissionData/TelemetryDataHelper.java MissionData/ImageDataHolder.java MissionData/ImageDataHelper.java MissionData/Telemetry.java MissionData/TelemetryHolder.java MissionData/TelemetryHelper.java
OBJS_DEPEND_ON_GENERATED = 1
## More than one file is generated by the command and therefore
## it can not be run in parallel.  Unfortunately, there is no way to
## say that only this rule can't be run in parallel.  However, we can
## determine if the generated files have already been generated.  If that's
## the case, then we don't need this special rule.
ifeq ($(wildcard $(GENERATED_DIRTY)), $(GENERATED_DIRTY))
  ## If we can find /bin/test, then we will continue
  ifneq ($(TEST_EXE),)
    ## If all of the generated files are there, then we need to check
    ## and make sure that the generated files are up-to-date.  If they are not
    ## then we need the special rule.
    ifeq ($(shell $(TEST_EXE) "MissionData.idl" -nt "MissionDataJC.cpp" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionDataJC.h" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/PlanDataHolder.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/PlanDataHelper.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/MissionPlan.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/MissionPlanHolder.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/MissionPlanHelper.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/PointsHolder.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/PointsHelper.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/NormalizedPoints.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/NormalizedPointsHolder.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/NormalizedPointsHelper.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/TelemetryDataHolder.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/TelemetryDataHelper.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/ImageDataHolder.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/ImageDataHelper.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/Telemetry.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/TelemetryHolder.java" 2> /dev/null || $(TEST_EXE) "MissionData.idl" -nt "MissionData/TelemetryHelper.java" 2> /dev/null || echo 0),)
      .NOTPARALLEL:

    else
      ## By this point, all of the generated files are here and up-to-date
      ## with respect to the source file.  Now we need to make sure that
      ## they are up-to-date with respect to the generation tool.  If the tool
      ## is newer than the generated files, then we need the special rule.
      ifeq ($(shell $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionDataJC.cpp" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionDataJC.h" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/PlanDataHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/PlanDataHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlan.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/MissionPlanHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/PointsHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/PointsHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPoints.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/NormalizedPointsHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryDataHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/ImageDataHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/ImageDataHelper.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/Telemetry.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryHolder.java" 2> /dev/null || $(TEST_EXE) "$(call ADD_ARCH,$(IDL2JNI_DEP))" -nt "MissionData/TelemetryHelper.java" 2> /dev/null || echo 0),)
        .NOTPARALLEL:
      endif
    endif
  else
    .NOTPARALLEL:
  endif
else
.NOTPARALLEL:
endif
MissionDataJC.cpp MissionDataJC.h MissionData/PlanDataHolder.java MissionData/PlanDataHelper.java MissionData/MissionPlan.java MissionData/MissionPlanHolder.java MissionData/MissionPlanHelper.java MissionData/PointsHolder.java MissionData/PointsHelper.java MissionData/NormalizedPoints.java MissionData/NormalizedPointsHolder.java MissionData/NormalizedPointsHelper.java MissionData/TelemetryDataHolder.java MissionData/TelemetryDataHelper.java MissionData/ImageDataHolder.java MissionData/ImageDataHelper.java MissionData/Telemetry.java MissionData/TelemetryHolder.java MissionData/TelemetryHelper.java: MissionData.idl $(subst $(SPACE),\$(SPACE),$(call ADD_ARCH,$(IDL2JNI_DEP)))
	$(if $(findstring ",$(IDL2JNI)),$(IDL2JNI),$(call ADD_QUOTE,$(call ADD_ARCH,$(IDL2JNI)))) -Wb,native_lib_name=MissionData -SS -I$(DDS_ROOT) -I$(TAO_ROOT) -Wb,stub_export_include=MissionData_Export.h -Wb,stub_export_macro=MissionData_Export MissionData.idl


ifneq ($(GENERATED_DIRTY),)
.PRECIOUS: $(GENERATED_DIRTY)
## If the generated files are anything but source files, we need to
## ensure that those files are generated before we attempt to build anything
## else.
ifeq ($(OBJS_DEPEND_ON_GENERATED),1)
$(VDIR)$(ACE_PCH_FILE) $(addprefix $(VDIR), $(OBJS)): $(GENERATED_DIRTY)
$(VSHDIR)$(ACE_PCH_FILE) $(VSHOBJS): $(GENERATED_DIRTY)
endif
endif

ADDITIONAL_IDL_TARGETS += MissionDataTypeSupport$(IDL_CLIENT_HDR_EXT) MissionData$(IDL_CLIENT_HDR_EXT)
idl_stubs: $(ADDITIONAL_IDL_TARGETS)

# This assignment forces make to run the idl_stubs
# target before building any of the source files.
FORCED_IDL_STUBS = MissionDataTypeSupportJC.cpp MissionDataJC.cpp MissionDataTypeSupportS.cpp MissionDataTypeSupportC.cpp MissionDataS.cpp MissionDataC.cpp MissionDataTypeSupportImpl.cpp  
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:MissionDataTypeSupportS.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:MissionDataTypeSupportC.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:MissionDataS.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:MissionDataC.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:MissionDataTypeSupportImpl.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:MissionDataTypeSupportJC.cpp=)
FORCED_IDL_STUBS := $(FORCED_IDL_STUBS:MissionDataJC.cpp=)

ifneq ($(FORCED_IDL_STUBS),)
$(FORCED_IDL_STUBS): idl_stubs
endif

incremental_depend_idl::
	@$(RM) $(IDL_DEPENDENCY_FILE1)_idl.old
	@cp $(IDL_DEPENDENCY_FILE1) $(IDL_DEPENDENCY_FILE1)_idl.old
	$(DEPGEN_ENV) $(DEPGEN) -A $(DEPEND_CMD_ARGS) -f $(IDL_DEPENDENCY_FILE1) \
	$(IDL_DEPS_FLAGS1) -t gnuidl -DMAKEDEPEND $(IDL_DEPS1)
	@if cmp -s $(IDL_DEPENDENCY_FILE1) $(IDL_DEPENDENCY_FILE1)_idl.old ;\
	then echo "GNUmakefile idl dependencies unchanged for $(IDL_DEPS1)." ;\
	else \
		echo "GNUmakefile idl dependencies updated for $(IDL_DEPS1)." ;\
	fi ;\
	$(RM) $(IDL_DEPENDENCY_FILE1)_idl.old ;
	@$(RM) $(IDL_DEPENDENCY_FILE2)_idl.old
	@cp $(IDL_DEPENDENCY_FILE2) $(IDL_DEPENDENCY_FILE2)_idl.old
	$(DEPGEN_ENV) $(DEPGEN) -A $(DEPEND_CMD_ARGS) -f $(IDL_DEPENDENCY_FILE2) \
	$(IDL_DEPS_FLAGS2) -t gnuidl -DMAKEDEPEND $(IDL_DEPS2)
	@if cmp -s $(IDL_DEPENDENCY_FILE2) $(IDL_DEPENDENCY_FILE2)_idl.old ;\
	then echo "GNUmakefile idl dependencies unchanged for $(IDL_DEPS2)." ;\
	else \
		echo "GNUmakefile idl dependencies updated for $(IDL_DEPS2)." ;\
	fi ;\
	$(RM) $(IDL_DEPENDENCY_FILE2)_idl.old ;

realclean: clean
ifneq ($(GENERATED_DIRTY),)
	-$(RM) -r $(GENERATED_DIRTY)
endif
	-rm -rf classes ; rm -rf ./DDS_MissionData_types.jar

__prebuild__:
ifeq ($(java),1)
	@mkdir -p classes 2> /dev/null || cat /dev/null > /dev/null
endif

all: __postbuild__

__postbuild__: $(VLIBS) $(INSTALL)

__postbuild__:
ifeq ($(java),1)
	@"$(JAVA_HOME)/bin/jar" -cf ./DDS_MissionData_types.jar -C classes .
endif


.PHONY: install
install: __postbuild__
INSTALL_LIB ?= lib
ifneq ($(INSTALL_PREFIX),)
ifneq ($(install_rpath),0)
LD_RPATH ?= -Wl,-rpath,
LDFLAGS += $(LD_RPATH)$(INSTALL_PREFIX)/$(INSTALL_LIB) $(LD_RPATH_FLAGS)
endif
endif


$(filter %.class, $(GENERATED_DIRTY)): $(filter %.java, $(GENERATED_DIRTY))

